@inject ICustomerService _customerService
@inject IJSRuntime JSRuntime;

<div class="modal" tabindex="-1" role="dialog" id="addModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@customer" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    @*<ValidationSummary />*@

                    <div class="form-group">
                        <label for="name">Nombres</label>
                        <input type="hidden" @bind-value="@customer.Id" />
                        <InputText id="name" class="form-control" @bind-Value="@customer.FullName" />
                        <ValidationMessage For="@(() => customer.FullName)" />
                    </div>

                    <div class="form-group">
                        <label for="email">Email</label>
                        <InputText id="email" class="form-control" @bind-Value="@customer.Email" />
                        <ValidationMessage For="@(() => customer.Email)" />
                    </div>

                    <div class="form-group">
                        <label for="phone">Teléfono</label>
                        <InputText id="phone" class="form-control" @bind-Value="@customer.Phone" />
                        <ValidationMessage For="@(() => customer.Phone)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public Customer customer { get; set; }

    [Parameter]
    public EventCallback<Boolean> OnRefresh { get; set; }

    private async void HandleValidSubmit()
    {
        if (customer.Id == 0)
        {
            await _customerService.Add(customer);
        }
        else
        {
            await _customerService.Update(customer);
        }

        await OnRefresh.InvokeAsync(true);
        await JSRuntime.InvokeAsync<object>("closeModal", "addModal");
    }

}